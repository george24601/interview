-------
Given a set of possibly overlapping rectangles in different levels (All of which are "not rotated", can be uniformly represented as (left-bottom,right-top) tuplets), return a minimal set of (non-rotated) non-overlapping rectangles, that occupy the same area. 
The rectangle at lower level has more priority than at higher levels.

------
Given integer k and a subset S of set {0, 1, 2, ..., 2^k - 1} 
Return the count of pairs (a, b) where a and b are from S and (a < b) and (a & b == a) 
& here is bit-wise and. 
Do it faster than O((2^k)^2), assume k <= 16 

Example: 
0b111 
0b101 
0b010 
Answer: 2 

0b110 
0b011 
0b101 
Answer: 0

------

You are given a set of points on x axis (consumers) 
Also you are given a set of points on a plane (producer) 

For every consumer print the nearest producer. 
Wanted something better than O(n^2) time. 

Example: 
consumers: 1 5 7 
producers: (0, 3), (1,1), (3, 2), (8, 10), (9, 100) 

Answer: 
for 1 nearest producer is (1, 1), for 5 nearest is (3, 2), for 7 nearest is (3, 2)

Follow-up question: now both sets are sorted by x coordinate. Could you come up with a linear algorithm?

-------

Given n, return 1 ^ 2 ^ 3 ^ ... ^ n 
Where ^ is binary xor. 
Note: n is a 64-bit number, and 1<<63 is a valid n for this problem. 

Examples:


>>> reduce(lambda a,b:a^b, [1,2,3])
0
>>> reduce(lambda a,b:a^b, [1,2,3,4])
4
>>> reduce(lambda a,b:a^b, [1,2,3,4,5,6,7])
0
>>> reduce(lambda a,b:a^b, [1,2,3,4,5,6,7,8,9])
1

--------

You are given a permutation arr[N]. E.g. arr[3] = {2, 1, 0} or arr[5] = {0,1,2,4,3}; 
Then you can prepare somehow and then start serving requests: request(a, b, k) = sorted(arr[a:b])[k], that is, k-th order statistic on slice [a:b] of arr. 
E.g. if arr is [3,4,5,0,1,2] and a = 2 and b = 5, then arr[a:b] = [5,0,1] and let k = 2, so we sort it - get [0,1,5] and take k-th element, that is - 5. 

Implement request(a, b, k) function. You can preprocess input data, that is, assume there will be only one array and many request() calls.

------

Given an int array without repeated elements and a target, count the total number of subset that can be generated from the array such that min (subset) + max (subset) < target 
public int countSubSet(int[] nums, int target){ 

}

------

Data structure design, N horse races, there are 10 checkpoints, whenever a horse through a check point will produce a (horse number, check point number) message, then design a data structure and algorithm to update the messages and then get the top 3 horse efficiently.

-----
-------

Say you have an array for which the ith element is the price of a given stock on day i. 

Design an algorithm to find the maximum profit. You may complete as many transactions as you like (ie, buy one and sell one share of the stock multiple times). However, you may not engage in multiple transactions at the same time (ie, you must sell the stock before you buy again). 
, but each time you sell you need to pay transaction fee, please calculate the maximum profit you can take. 

public int maxProfit(int[] prices, int fee) { 

}

------

for a binary tree, print the root to the leaf path, but add "_" to indicate the relative position. 
example:


A 
       /   \  
      B     C 
     / \   / \
    D  E   F  G

output
_ _ A
_ B
D

_A
B
_E

A
_C
F

A
_ C
_ _ G

------

Given a string and dictionary of words, form a word by removing minimum number of characters. Characters can be removed in-order only.

----
Find longest consecutive path in a binary tree. 
1. the path can be decreasing or increasing, i.e [1,2,3,4] and [4,3,2,1] are both valid 
2. the path can be child-parent-child, not necessarily a parent-to-child path 

similar to this question: http://www.geeksforgeeks.org/longest-consecutive-sequence-binary-tree/

-----
Implement delete operation for N-ary tree. Your function should return a list of roots after deletion operation. Notice that your delete function only delete one node instead of a subtree. The delete function takes a list of nodes to be deleted.


private class TreeNode {
   int val;
   TreeNode[ ] child;
}

List<TreeNode> delete(TreeNode root, HashSet<TreeNode> set) { }
------
Return the length of longest possible chunked palindrome string. 

Examples : 

Input : VOLVO 
Output : 3 
Explanation : 
(VO)L(VO) 


Input : merchant 
Output : 1 

Explanation : No chunks possible. 

Input : 

ghiabcdefhelloadamhelloabcdefghi 

Output : 7 

Explanation : 

(ghi)(abcdef)(hello)(adam)(hello)(abcdef)(ghi)

-------

Given a list of manager and employee information represented in hashMap entries {AAA->BBB,CCC,EEE},{CCC->DDD}. 
Print company structure tree with proper indentations. BBB, CCC and EEE directly reports to AAA, so they have one white space before "-", DDD reports to CCC, it has two whitespace before "-". The input is map<String,List<String>>


-AAA
 -BBB
 -CCC
  -DDD
 -EEE
------

Given a pattern and a string - find if the string follows the same pattern Eg: Pattern : [a b b a], String : cat dog dog cat

----
tokenize string, "" and [] are token flags, such as 
mytable "foo" [bar] "" [[[[]]]. 

"" Turned into ",]] turned into], [[not escaped 
The results of the example given above: 
mytable 
foo 
bar " 
[[] 
public List<String> tokenizestring(String s){ 
}

--------

Create an iterator class that stores a list of the built-in Iterators. 
Implement the next() and hasNext() methods in a Round Robin pattern (pops next element in a circle). 
Example: 
Given a list [iterator1,iterator2, iterator3...] 
when calling RoundIterator.next() 
pops iterator1.next if iterator1.hasNext() is true 
when calling RoundIterator.next() 
pops iterator2.next() if iterator2.hasNext() is true 
when calling RoundIterator.next() 
pops iterator3.next if iterator3.hasNext() is true 
... 
when calling RoundIterator.next() 
pops iterator1.next if iterator1.hasNext() is true 
when calling RoundIterator.next() 
pops iterator2.next if iterator2.hasNext() is true 
when calling RoundIterator.next() 
pops iterator3.next if iterator3.hasNext() is true 
... 
until there is no more element in any of the iterators

------
Implement Ring Buffer with read and write pointers. 
For example if the Ring buffer is implemented in the form of array of integers , one should be able to read / write more than one integer at a time. In short the data read / written should be in a chunk .

-------
Given a Starting Node and Ending Node in a Graph where each Node has a pointer to its parent and all its children nodes. Find all the leaf nodes between the Starting and Ending Node.

------
Find longest consecutive path in a binary tree. 
1. the path can be decreasing or increasing, i.e [1,2,3,4] and [4,3,2,1] are both valid 
2. the path can be child-parent-child, not necessarily a parent-to-child path 

similar to this question: http://www.geeksforgeeks.org/longest-consecutive-sequence-binary-tree/

---------
Implement delete operation for N-ary tree. Your function should return a list of roots after deletion operation. Notice that your delete function only delete one node instead of a subtree. The delete function takes a list of nodes to be deleted.


private class TreeNode {
   int val;
   TreeNode[ ] child;
}

List<TreeNode> delete(TreeNode root, HashSet<TreeNode> set) { }
--------
Given a list of manager and employee information represented in hashMap entries {AAA->BBB,CCC,EEE},{CCC->DDD}. 
Print company structure tree with proper indentations. BBB, CCC and EEE directly reports to AAA, so they have one white space before "-", DDD reports to CCC, it has two whitespace before "-". The input is map<String,List<String>>


-AAA
 -BBB
 -CCC
  -DDD
 -EEE
--------

Given N stacks, each stack contains Si elements, find the maximum sum of the M numbers in the N stacks. To get the number of the stack, only supporting get the top number. For example, S=[1,200,1,2,3], if you want to get the number 200, you need choose 3,2,1 first. 
EX: 
S1=[1,1,100,3] 
S2=[2000,2,3,1] 
S3=[10,1,4] 
the maximum sum of the 3 numbers in the above stacks is 3+100+3=107. 
Any better solution for this problem?

-------

Tom works in a warehouse. A billion (1,000,000,000) boxes are arranged in a row. They are numbered from one to one billion (from left to right). Some boxes contain a basketball (at most one basketball in each box). In total, there are N basketballs.Tom wants to organize the warehouse. He would like to see all the basketballs arranged next to each other (they should occupy a consistent interval of boxes). In one move, Tom can take one basketball and move it into an empty box. What is the minimum number of moves needed to organize the basketballs in the warehouse? 

Write a function:


class Solution { public int solution(int[] A); }
that, given an array A containing N integers, denotes the positions of the basketballs (the numbers of the boxes in which they are placed) and returns the minimum number of moves needed to organize the basketballs in the warehouse. 

For example, given: A = [6, 4, 1, 7, 10], your function should return 2 because the minimum number of moves needed to arrange all basketballs next to each other is 2. There are several ways to do it. For example, you could move the ball from the first box to the fifth, and the ball from the tenth box to the eighth. You could also move the ball from the first box to the fifth, and the ball from the tenth box to the third instead. In any case, you need at least two moves. 

To be done in O(nlogn) Time complexity and O(1) space complexity
-------
You are the main character in a game where you have to defeat a number of enemies in order. The player has a strength value and an initial amount of money. Each enemy also has a strength value, plus a price. 

When facing each enemy you can either: 
1) Fight him (if your strength is enough). You keep your money. 
2) Bribe him (if you have the necessary money). You subtract the enemy's price from your money, and it joins you and adds its strength to yours. 

Given a starting strength and amount of money, calculate the optimal strategy and the amount of money you end with (-1 if impossible). 

This can be easily solved recursively in O(2^n) basically trying out each option at every enemy. But is there a polynomial solution, maybe involving DP?

-------
Given a list of coin values, and quantity of each type of coin. Write a 
program to return the set of all possible sums which can be made using those 
coins. 
ex. coins = [10, 50, 100, 500] 
quantity = [5, 3, 2, 2] 
sum could be 400 , 300 ,200 , 100

-------
n points on a 2D space. You observe the points from (0,0) with viewing direction and viewing angle. 
Given an array (xn,yn), and a viewing angle v (45 degree), find the direction that can observe max number of points.

------
Given a function getRandom that returns a random double in [0,1). Write a function getRandomPermutation(int n) that takes a positive integer n as argument and returns a random permutation of first n natural numbers.

------
You are given a sorted list of distinct integers from 0 to 99, for instance [0, 1, 2, 50, 52, 75]. Your task is to produce a string that describes numbers missing from the list; in this case "3-49,51,53-74,76-99". 

Examples: 

[] “0-99” 
[0] “1-99” 
[3, 5] “0-2,4,6-99”
-------
Given 'n' circles (each defined by center and radius) 

Write an algorithm to detect if circles intersect with any other circle in the same plane 

Better than O(n^2) complexity

------
Return the pivot index of the given array of numbers. The pivot index is the index where the sum of the numbers on the left is equal to the sum of the numbers on the right. Input Array {1,2,3,4,0,6}

------
Given the village of a map represented as a 2D grid containing houses,bushes and open-spaces, write a program to find a point for conducting a meeting in the map. Such point should be minimum from all the houses in the village. 

Eg.


# # # # #
# # A   #
#    B  #
#       #
#    #  #
#   C   #
# # # # #
# -> represents the bushes 
A, B, C -> position of houses 

I provided a O(n*a*b) approach, where n-> no. of houses , a,b->dimensions of the grid. 

The interviewer asked me for some special cases. Can it be done more efficiently?

-------
You are given a scrambled input sentence. Each word is scrambled independently, and the results are concatenated. So: 

'hello to the world' 
might become: 
'elhloothtedrowl' 

You have a dictionary with all words in it. Unscramble the sentence.

-------

Given a string "2-4a0r7-4k", there are two dashes which we can split into 3 groups of length 1, 5, 2. 

If we want each group to be length 4, then we get "24A0-R74k" 

Given a String A and an int K, return a correctly formatted string. 

IF A is "2-4A0r7-4k" and B is 4, string is "24A0-R74K" 
IF K is 3, string is "24-A0R-74K" as the first grp could be shorter.

-------
Let's say I have a word "I love chicken", I can break the number of characters in each word, like so: [1] [4] [7] 
[1,4] [4,7], [1,4,7]. 

Now let's say I have a max = 5. The phrases with equal or fever than 5 characters are "[I], [love], and [I, love]. The longest phrase is [I,love], which contains 2 words. 

Complete the Length function given. It has 2 parameters: 

1) An array of integers, named array 
2) A maximum number, named max. 

int Careercup( int [] array, int max) { 
} 

Example test case 1: 

[3,1,2,3] 
4 

Output expected : 2

