	Design copy-on-write string class 
	e.g. stringclass s("abc"); 
	stringclass s1 = s; // no copy 
	s = "bcd"; // copy

	------

	// Design and implement key value system
	//
	// string -> string
	// Insert a key-value pair or modify a value
	void put(string key, string value);

	// Delete a key-value pair
	void delete(string key);

	// Gets a value given a snapshot
	string get(string key, Snapshot snap);

	// Take a snapshot
	Snapshot takeSnapshot();

	// Delete a snapshot
	void deleteSnapshot(Snapshot snap);

	// put(k1,v1)
	// put(k2,v2)
	// put(k3,v3)
	// takeSnapshot -> snap1 { k1 -> v1, k2 -> v2, k3 -> v3 }
	// get(k1,snap1) -> v1
	// put(k1,v4)
	// delete(k3)
	// takeSnapshot -> snap2 { k1 -> v4, k2 -> v2 }
	// get(k1,snap2) -> v4
	// get(k1,snap1) -> v1
	// get(k3,snap2) -> XX
	// deleteSnapshot(snap1)
	// get(k1,snap1) -> XX

	// Space efficient is more important than time efficient, thus please use as small space as possible.

--------
1) Finish writing the below method: bookReservation(Reservation reservation) 

2) You are free to add, modify, etc the following classes and method


import java.time.Duration;
import java.time.LocalTime;
import java.util.List;
import java.util.Map;

// Your goal is to write business logic for a very simple Restaurant booking system
// You are encouraged to refactor exisiting code, create other classes, write helper methods etc
// You also need to make sure that the implementation works correctly


class Reservation
{
    public String name;
    public int partySize;
    public LocalTime startTime;
}

class Table
{
    public int tableNumber;
    public int maxPartySize;      
}

class Restaurant
{
    public List<Table> tables;   
    public LocalTime openTime;
    public LocalTime closeTime;
    public Map<Integer, Duration> reservationDurationsPerPartySize;
    
    // Returns a Table if Reservation could be booked, null otherwise
    // Booking rules: 
    // 1) Reservation could be made only when the Restaurant is open.
    // 2) Only one Reservation can be seatted a Table at any time.
    // 3) Reservation can be seatted only at a Table of the same or a bigger size.
    // 4) Reservation should stay on the same Table for the whole Duration.
    // 5) Reservation Duration is determined by PartySize.
    public Table bookReservation(Reservation reservation) {
          //fill this method
}

------

I need to create a database that have five columns each entry is such that there can be repeated tuples in each column(No primary key).There will be no two same entries 
There are 5 Methods that needs to be implemented 
1. Create() - create the database 
2. Add(string a,b,c,d,e) - Add single entries with 5 tuples(all strings) 
3. Update (culumntype1, columnvalue1,culumntype2, columnvalue2) 
- each entry having culumntype1 = columnvalue1 will be updated by columntype2=columnvalue2 and return total such eantries. 
4. Delete (culumntype1, columnvalue1) 
- each entry having culumntype1 = columnvalue1 will be deleted.and return total such eantries. 
5. Search(culumntype1, columnvalue1) 
- Search each entry having culumntype1 = columnvalue1 and return total such eantries. 

How to implement in best possible way such that there can be 50,000 such entries?

------
How do you verify a search result list which changes consistently based on each search word and filters? 

For example, how do you make sure that the list is sorted based on price or rating or etc without any identical list to compare with? Since providing an identical list as Test Input for each word is not the best approach.

---------
Given a large file with sentences and query string, design a system (Class, data structs, functions, etc) and algorithm to return the smallest window (start and end offsets) in the input file where the query words (in any order) are seen in the text file. What is the time complexity?

-----

You are given three type of data sets. 
Type 1 
Data size: 4 billion 
Distinct Data: 1000 
Type 2 
Data Size: 4 billion 
Distinct Data: 2 billion 
Type 3 
Data Size: 1000 
Each Data is of length 100 million byte 

What kind of data structure would you use to answer search/insert/remove queries for each data types?
